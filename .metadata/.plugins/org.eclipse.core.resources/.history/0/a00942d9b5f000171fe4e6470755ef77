import generator.TreeNode;
import generator.TreeRandom;
public class Solution28 {

	public static void main(String[] args) {
		TreeNode input1 = TreeRandom.treeGenLeftRange(3, null, 0, 10);
		TreeNode input2 = TreeRandom.treeGenLeftRange(3, null, 0, 10);
		System.out.println(isIdentical(input1, input2));
	}
	
	//what: recursively check each root until the bottoms of the trees.
	public static boolean isIdentical(TreeNode one, TreeNode two) {
		if (one == null && two == null) {
			return true;
		} else if (one == null || two == null) {
			return false;
		} else if (one.key != two.key) {
			return false;
		}
		return isIdentical(one.left, two.left) && isIdentical(one.right, two.right);
	}
	//Time Complexity: O(min(n,m));
	//Space Complexity: O(log(min(n,m));

	public static boolean isIdentical1(TreeNode one, TreeNode two) {
		
	}
}
