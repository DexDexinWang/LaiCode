
public class Solution3 {

	public static void main(String[] args) {
		
	}
	
	public static TreeNodeP lowestCommonAncestor(TreeNodeP one, TreeNodeP two) {
	    if (one == null || two == null) {
	        return null;
	      }
	      int oneLen = 0;
	      TreeNodeP temp = one;
	      while(temp.parent != null) {
	        temp = temp.parent;
	        oneLen ++;
	      }
	      temp = two;
	      int twoLen = 0;
	      while(temp.parent != null) {
	        temp = temp.parent;
	        twoLen++;
	      }
	      if (oneLen > twoLen) {
	        for(int i = 0; i < oneLen - twoLen ; i++) {
	          one = one.parent;
	        }
	      } else if (twoLen > oneLen) {
	        temp = two;
	        for(int i = 0; i < twoLen - oneLen ; i++) {
	          two = two.parent;
	        }
	      }
	      
	      while(one != two) {
	        one = one.parent;
	        two = two.parent;
	      }
	      
	      return one;
	}

	static class TreeNodeP {
		public int key;
		public TreeNodeP left;
		public TreeNodeP right;
		public TreeNodeP parent;
		public TreeNodeP(int key, TreeNodeP parent) {
			this.key = key;
			this.parent = parent;
		}
	}
}
