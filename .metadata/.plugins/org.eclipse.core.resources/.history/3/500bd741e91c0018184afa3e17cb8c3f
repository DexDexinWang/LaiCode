
public class Solution7 {

	public static void main(String[] args) {
		int[] input = {6,0,2,0,1,0,4};
		Solution7 s = new Solution7();
		System.out.println(s.minJump(input,2));
	}

	
	public int minJump(int[] array, int index) {
		int[] minStepsToEnd = minJump(array);
	}
	
	//Solve the problem with DP and 1D array;
	//dp[i] represents the minimum jumps from 0 to ith;
	//dp[end] = 0;
	//dp[i] = min(dp[k] + 1)    
	private int[] minJump(int[] array) {
		int[] dp = new int[array.length];
		dp[array.length - 1] = 0;
		for (int i = 1; i < array.length; i++) {
		      dp[i] = Integer.MAX_VALUE;
		      for(int j = 0; j < i; j++) {
		        if (array[j] + j >= i && dp[j] !=  Integer.MAX_VALUE) {
		          if (dp[i] == -1 || dp[j] + 1 < dp[i]) {
		            dp[i] = dp[j] + 1;
		          }
		        }
		      }
		    }
		return dp;
	}
}
