import java.util.Collections;
import java.util.PriorityQueue;

public class Solution5 {

	PriorityQueue<Integer> small;
	PriorityQueue<Integer> large;
	Double median;
	public Solution5(){
		small = new PriorityQueue<Integer>();
		large = new PriorityQueue<Integer>(Collections.reverseOrder());
	}
	
	public void read(int value) {
		//find the correct PQ for the number.
		int smaller = small.peek();
		int larger = large.peek();
		if (value <= smaller) {
			small.offer(value);
		} else {
			large.offer(value);
		}
		//balance queue.
		if (small.size() > large.size() + 1) {
			large.offer(small.poll());
		} else if (small.size() < large.size()) {
			small.offer(large.poll());
		}
		//return value.
		if (small.size() == large.size()) {
			median = (Double)(smaller + larger) /2;
		}
		
	}
	
	public Double median() {
		
	}
	
}
