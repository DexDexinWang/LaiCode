
public class Solution2 {

	public static void main(String[] args) {
		System.out.println(match("abc","?*"));

	}
	/*
		Given two strings where first string is a normal string and second string may contain wild card characters. Write a function that returns true if the two strings match. The following are allowed wildcard characters in first string. 
		* --> Matches with 0 or more instances of any character or set of characters.
		? --> Matches with any one character.
		
		Assumptions:
		
		The two strings are both not null.
		Assume there is no more than one '*' adjacent to each other.
		Examples:
		
		input = "abc", pattern = "?*", return true.
	 */
	
	//what: find whether the pattern and input are comparable.
	public static boolean match(String input, String pattern) {
		//how: 1. corner case
		if(pattern.length() > input.length() - 1) {
			return false;
		}
		//2. get the first character from pattern 
		char wild = pattern.charAt(0);
		//3. check wild is * or ?
		//3.1. ?, do recursion.
		//3.2. *, return true beucase the corner case solv the problem.
		if (wild == '?') {
			match(input.substring(1), pattern.substring(1));
		} else {
			return true;
		}
		return true;
	}
}
