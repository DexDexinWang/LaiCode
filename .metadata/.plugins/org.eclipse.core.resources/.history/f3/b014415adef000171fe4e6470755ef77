import generator.TreeNode;

public class Solution36 {

	public static void main(String[] args) {
		TreeNode input = new TreeNode(-1);
		System.out.println(lowestCommonAncestor(null, null, null));
	}

	public static TreeNode lowestCommonAncestor(TreeNode root, TreeNode one, TreeNode two) {
		    if(root == null || one == null || two == null) {
		      return null;
		    }
		    TreeNode left = lowestHelper(root.left, one, two);
		    TreeNode right = lowestHelper(root.right, one, two);
		    if (left == null || right == null) {
		      return null;
		    } else {
		      return root;
		    }
		  }
		  
	public static TreeNode lowestHelper(TreeNode root, TreeNode one, TreeNode two) {
		    if (root == null) {
		      return null;
		    }
		    if (root == one || root == two) {
		      return root;
		    }
		    TreeNode left = lowestHelper(root.left, one, two);
		    TreeNode right = lowestHelper(root.right, one, two);
		    if (left != null && right != null) {
		      return root;
		    }
		    return left == null ? right : left;
		  }
}
