import java.util.ArrayList;
import java.util.List;

public class Solution44 {

	public static void main(String[] args) {
		int[] input = {1, 4, 7, 13};
		System.out.println(closest(input, 7));
	}
	/* Find the pair of elements in a given array that sum to 
	 * a value that is closest to the given target number. 
	 * Return the values of the two numbers.
	 */
	//what: find the most closet sum of tow number from the the array.
	public static List<Integer> closest(int[] array, int target) {
		List<Integer> res = new ArrayList<Integer>();
		//how: 1. corner case  
		if (array == null || array.length <= 1) {
			return res;
		}
		//2. define two pointers to traverse each possible sum.
		int i = 0;
		int j = array.length - 1;
		int cloest = 0;
		while (i <= j) {
			if (array[j] + array[i] == target) {
				res.add(target);
				continue;
			} else if (array[i] + array[j] > target) {
				j--;
			} else {
				i++;
			}
			
		}
		return res;
	}

}
